<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<!-- saved from url=(0041)http://codeforces.ru/contest/508/problems -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta name="X-Csrf-Token" content="72b16457f84205a6732ab943d4679842">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta http-equiv="profileName" content="p1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90">
    <meta property="fb:admins" content="100001352546622">
    <meta property="og:image" content="/static/images/codeforces-telegram-square.png">
    <meta property="og:title" content="Problems - Codeforces">
    <meta property="og:site_name" content="Codeforces">
    
    <meta name="cc" content="1htwufr54k0ny">
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2">
    <title>Problems - Codeforces</title>
        <meta name="description" content="Codeforces. Programming competitions and contests, programming community">
        <meta name="keywords" content="programming algorithm contest competition informatics olympiads c++ java graphs vkcup">
    <meta name="robots" content="index, follow">

    <link rel="stylesheet" href="./Problems - Codeforces_files/font-awesome.min.css" type="text/css" charset="utf-8">

        <link href="./Problems - Codeforces_files/css" rel="stylesheet" type="text/css">


    <link rel="shortcut icon" type="image/png" href="http://codeforces.ru/static/favicon.png">

    <!--CombineResourcesFilter-->
    <link charset="utf-8" href="./Problems - Codeforces_files/c2c699eeaf00c8a661f0f576931b7c1f_18bf278167346941b4db861716e5db58.css" rel="stylesheet" type="text/css">
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
        

    <script type="text/javascript" async="" src="./Problems - Codeforces_files/ga.js"></script><script src="./Problems - Codeforces_files/89b3ee750b2212159cecc5edcdb53b8e_17d9f944603856db9fc173ec6e3570cc.js" type="text/javascript"> </script><style type="text/css"></style>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <!--/CombineResourcesFilter-->

    <link rel="stylesheet" href="./Problems - Codeforces_files/style.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/style(1).css" type="text/css" charset="utf-8">

    <script type="text/javascript" src="./Problems - Codeforces_files/share.js" charset="utf-8"></script>
    
    <script type="text/javascript" src="./Problems - Codeforces_files/jquery.markitup.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/set.js"></script>

    <!--[if IE]>
    <style>
        #sidebar {
            padding-left: 1em;
            margin: 1em 1em 1em 0;
        }
    </style>
    <![endif]-->


</head>
<body><span style="display:none;" class="csrf-token" data-csrf="72b16457f84205a6732ab943d4679842">&nbsp;</span>
<div class="button-up" style="display: none; opacity: 0.7; width: 50px; height:100%; position: fixed; left: 0; top: 0; cursor: pointer; text-align: center; line-height: 35px; color: #d3dbe4; font-weight: bold; font-size: 30px;"><i class="icon-circle-arrow-up"></i></div>

<!-- Codeforces JavaScripts. -->
<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.getCodeforcesServerTime = function(callback) {
        $.post("/data/time", {}, callback, "json");
    }

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function () {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = (document.location.protocol == 'https:' ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="http://codeforces.ru/"><img src="./Problems - Codeforces_files/codeforces-logo-with-telegram.png"></a>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="http://codeforces.ru/contest/508/problems?locale=en"><img src="./Problems - Codeforces_files/gb.png" title="In English" alt="In English"></a>
                <a href="http://codeforces.ru/contest/508/problems?locale=ru"><img src="./Problems - Codeforces_files/ru.png" title="По-русски" alt="По-русски"></a>
            </div>
        </div>
        <br style="clear: both;">
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;" class="caption">Codeforces Round #288 (Div. 2)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div style="margin-bottom: 4em;page-break-after: always;">
<!-- Frame: ProblemViewFrame.ftl -->
<div class="problemindexholder" problemindex="A">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Pasha and Pixels</div><div class="time-limit"><div class="property-title">time limit per test</div>2 seconds</div><div class="memory-limit"><div class="property-title">memory limit per test</div>256 megabytes</div><div class="input-file"><div class="property-title">input</div>standard input</div><div class="output-file"><div class="property-title">output</div>standard output</div></div><div><p>Pasha loves his phone and also putting his hair up... But the hair is now irrelevant.</p><p>Pasha has installed a new game to his phone. The goal of the game is following. There is a rectangular field consisting of <span class="tex-span"><i>n</i></span> row with <span class="tex-span"><i>m</i></span> pixels in each row. Initially, all the pixels are colored white. In one move, Pasha can choose any pixel and color it black. In particular, he can choose the pixel that is already black, then after the boy's move the pixel does not change, that is, it remains black. Pasha loses the game when a <span class="tex-span">2 × 2</span> square consisting of black pixels is formed. </p><p>Pasha has made a plan of <span class="tex-span"><i>k</i></span> moves, according to which he will paint pixels. Each turn in his plan is represented as a pair of numbers <span class="tex-span"><i>i</i></span> and <span class="tex-span"><i>j</i></span>, denoting respectively the row and the column of the pixel to be colored on the current move.</p><p>Determine whether Pasha loses if he acts in accordance with his plan, and if he does, on what move the <span class="tex-span">2 × 2</span> square consisting of black pixels is formed.</p></div><div class="input-specification"><div class="section-title">Input</div><p>The first line of the input contains three integers <span class="tex-span"><i>n</i>, <i>m</i>, <i>k</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 1000</span>, <span class="tex-span">1 ≤ <i>k</i> ≤ 10<sup class="upper-index">5</sup></span>)&nbsp;— the number of rows, the number of columns and the number of moves that Pasha is going to perform. </p><p>The next <span class="tex-span"><i>k</i></span> lines contain Pasha's moves in the order he makes them. Each line contains two integers <span class="tex-span"><i>i</i></span> and <span class="tex-span"><i>j</i></span> (<span class="tex-span">1 ≤ <i>i</i> ≤ <i>n</i></span>, <span class="tex-span">1 ≤ <i>j</i> ≤ <i>m</i></span>), representing the row number and column number of the pixel that was painted during a move.</p></div><div class="output-specification"><div class="section-title">Output</div><p>If Pasha loses, print the number of the move when the <span class="tex-span">2 × 2</span> square consisting of black pixels is formed.</p><p>If Pasha doesn't lose, that is, no <span class="tex-span">2 × 2</span> square consisting of black pixels is formed during the given <span class="tex-span"><i>k</i></span> moves, print <span class="tex-span">0</span>.</p></div><div class="sample-tests"><div class="section-title">Sample test(s)</div><div class="sample-test"><div class="input"><div class="title">Input</div><pre>2 2 4<br>1 1<br>1 2<br>2 1<br>2 2<br></pre></div><div class="output"><div class="title">Output</div><pre>4<br></pre></div><div class="input"><div class="title">Input</div><pre>2 3 6<br>2 3<br>2 2<br>1 3<br>2 2<br>1 2<br>1 1<br></pre></div><div class="output"><div class="title">Output</div><pre>5<br></pre></div><div class="input"><div class="title">Input</div><pre>5 3 7<br>2 3<br>1 2<br>1 1<br>4 1<br>3 1<br>5 3<br>3 2<br></pre></div><div class="output"><div class="title">Output</div><pre>0<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
<!-- /Frame: ProblemViewFrame.ftl -->        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">
<!-- Frame: ProblemViewFrame.ftl -->
<div class="problemindexholder" problemindex="B">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Anton and currency you all know</div><div class="time-limit"><div class="property-title">time limit per test</div>0.5 seconds</div><div class="memory-limit"><div class="property-title">memory limit per test</div>256 megabytes</div><div class="input-file"><div class="property-title">input</div>standard input</div><div class="output-file"><div class="property-title">output</div>standard output</div></div><div><p>Berland, 2016. The exchange rate of <span class="tex-font-style-it">currency you all know</span> against the burle has increased so much that to simplify the calculations, its fractional part was neglected and the exchange rate is now assumed to be an integer.</p><p>Reliable sources have informed the financier Anton of some information about the exchange rate of <span class="tex-font-style-it">currency you all know</span> against the burle for tomorrow. Now Anton knows that tomorrow the exchange rate will be an even number, which can be obtained from the present rate by swapping exactly two distinct digits in it. Of all the possible values that meet these conditions, the exchange rate for tomorrow will be the maximum possible. It is guaranteed that today the exchange rate is an <span class="tex-font-style-it">odd</span> positive integer <span class="tex-span"><i>n</i></span>. Help Anton to determine the exchange rate of <span class="tex-font-style-it">currency you all know</span> for tomorrow!</p></div><div class="input-specification"><div class="section-title">Input</div><p>The first line contains an odd positive integer <span class="tex-span"><i>n</i></span>&nbsp;— the exchange rate of <span class="tex-font-style-it">currency you all know</span> for today. The length of number <span class="tex-span"><i>n</i></span>'s representation is within range from <span class="tex-span">2</span> to <span class="tex-span">10<sup class="upper-index">5</sup></span>, inclusive. The representation of <span class="tex-span"><i>n</i></span> doesn't contain any leading zeroes.</p></div><div class="output-specification"><div class="section-title">Output</div><p>If the information about tomorrow's exchange rate is inconsistent, that is, there is no integer that meets the condition, print <span class="tex-span"> - 1</span>.</p><p>Otherwise, print the exchange rate of <span class="tex-font-style-it">currency you all know</span> against the burle for tomorrow. This should be the maximum possible number of those that are even and that are obtained from today's exchange rate by swapping exactly two digits. Exchange rate representation should not contain leading zeroes.</p></div><div class="sample-tests"><div class="section-title">Sample test(s)</div><div class="sample-test"><div class="input"><div class="title">Input</div><pre>527<br></pre></div><div class="output"><div class="title">Output</div><pre>572<br></pre></div><div class="input"><div class="title">Input</div><pre>4573<br></pre></div><div class="output"><div class="title">Output</div><pre>3574<br></pre></div><div class="input"><div class="title">Input</div><pre>1357997531<br></pre></div><div class="output"><div class="title">Output</div><pre>-1<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
<!-- /Frame: ProblemViewFrame.ftl -->        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">
<!-- Frame: ProblemViewFrame.ftl -->
<div class="problemindexholder" problemindex="C">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Anya and Ghosts</div><div class="time-limit"><div class="property-title">time limit per test</div>2 seconds</div><div class="memory-limit"><div class="property-title">memory limit per test</div>256 megabytes</div><div class="input-file"><div class="property-title">input</div>standard input</div><div class="output-file"><div class="property-title">output</div>standard output</div></div><div><p>Anya loves to watch horror movies. In the best traditions of horror, she will be visited by <span class="tex-span"><i>m</i></span> ghosts tonight. Anya has lots of candles prepared for the visits, each candle can produce light for exactly <span class="tex-span"><i>t</i></span> seconds. It takes the girl one second to light one candle. More formally, Anya can spend one second to light one candle, then this candle burns for exactly <span class="tex-span"><i>t</i></span> seconds and then goes out and can no longer be used.</p><p>For each of the <span class="tex-span"><i>m</i></span> ghosts Anya knows the time at which it comes: the <span class="tex-span"><i>i</i></span>-th visit will happen <span class="tex-span"><i>w</i><sub class="lower-index"><i>i</i></sub></span> seconds after midnight, all <span class="tex-span"><i>w</i><sub class="lower-index"><i>i</i></sub></span>'s are distinct. Each visit lasts exactly one second.</p><p>What is the minimum number of candles Anya should use so that during each visit, at least <span class="tex-span"><i>r</i></span> candles are burning? Anya can start to light a candle at any time that is integer number of seconds from midnight, possibly, at the time before midnight. <span class="tex-font-style-bf">That means, she can start to light a candle integer number of seconds before midnight or integer number of seconds after a midnight, or in other words in any integer moment of time.</span></p></div><div class="input-specification"><div class="section-title">Input</div><p>The first line contains three integers <span class="tex-span"><i>m</i></span>, <span class="tex-span"><i>t</i></span>, <span class="tex-span"><i>r</i></span> (<span class="tex-span">1 ≤ <i>m</i>, <i>t</i>, <i>r</i> ≤ 300</span>), representing the number of ghosts to visit Anya, the duration of a candle's burning and the minimum number of candles that should burn during each visit. </p><p>The next line contains <span class="tex-span"><i>m</i></span> space-separated numbers <span class="tex-span"><i>w</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>i</i> ≤ <i>m</i></span>, <span class="tex-span">1 ≤ <i>w</i><sub class="lower-index"><i>i</i></sub> ≤ 300</span>), the <span class="tex-span"><i>i</i></span>-th of them repesents at what second after the midnight the <span class="tex-span"><i>i</i></span>-th ghost will come. All <span class="tex-span"><i>w</i><sub class="lower-index"><i>i</i></sub></span>'s are distinct, they follow in the strictly increasing order.</p></div><div class="output-specification"><div class="section-title">Output</div><p>If it is possible to make at least <span class="tex-span"><i>r</i></span> candles burn during each visit, then print the minimum number of candles that Anya needs to light for that.</p><p>If that is impossible, print <span class="tex-span"> - 1</span>.</p></div><div class="sample-tests"><div class="section-title">Sample test(s)</div><div class="sample-test"><div class="input"><div class="title">Input</div><pre>1 8 3<br>10<br></pre></div><div class="output"><div class="title">Output</div><pre>3<br></pre></div><div class="input"><div class="title">Input</div><pre>2 10 1<br>5 8<br></pre></div><div class="output"><div class="title">Output</div><pre>1<br></pre></div><div class="input"><div class="title">Input</div><pre>1 1 3<br>10<br></pre></div><div class="output"><div class="title">Output</div><pre>-1<br></pre></div></div></div><div class="note"><div class="section-title">Note</div><p><span class="tex-font-style-bf">Anya can start lighting a candle in the same second with ghost visit. But this candle isn't counted as burning at this visit.</span></p><p>It takes exactly one second to light up a candle and only after that second this candle is considered burning; it means that if Anya starts lighting candle at moment x, candle is buring from second x + 1 to second x + t inclusively.</p><p>In the first sample test three candles are enough. For example, Anya can start lighting them at the <span class="tex-span">3</span>-rd, <span class="tex-span">5</span>-th and <span class="tex-span">7</span>-th seconds after the midnight.</p><p>In the second sample test one candle is enough. For example, Anya can start lighting it one second before the midnight.</p><p>In the third sample test the answer is <span class="tex-span"> - 1</span>, since during each second at most one candle can burn but Anya needs three candles to light up the room at the moment when the ghost comes.</p></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
<!-- /Frame: ProblemViewFrame.ftl -->        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">
<!-- Frame: ProblemViewFrame.ftl -->
<div class="problemindexholder" problemindex="D">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Tanya and Password</div><div class="time-limit"><div class="property-title">time limit per test</div>2 seconds</div><div class="memory-limit"><div class="property-title">memory limit per test</div>256 megabytes</div><div class="input-file"><div class="property-title">input</div>standard input</div><div class="output-file"><div class="property-title">output</div>standard output</div></div><div><p>While dad was at work, a little girl Tanya decided to play with dad's password to his secret database. Dad's password is a string consisting of <span class="tex-span"><i>n</i> + 2</span> characters. She has written all the possible <span class="tex-span"><i>n</i></span> three-letter continuous substrings of the password on pieces of paper, one for each piece of paper, and threw the password out. Each three-letter substring was written the number of times it occurred in the password. Thus, Tanya ended up with <span class="tex-span"><i>n</i></span> pieces of paper.</p><p>Then Tanya realized that dad will be upset to learn about her game and decided to restore the password or at least any string corresponding to the final set of three-letter strings. You have to help her in this difficult task. We know that dad's password consisted of lowercase and uppercase letters of the Latin alphabet and digits. Uppercase and lowercase letters of the Latin alphabet are considered distinct.</p></div><div class="input-specification"><div class="section-title">Input</div><p>The first line contains integer <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 2·10<sup class="upper-index">5</sup></span>), the number of three-letter substrings Tanya got. </p><p>Next <span class="tex-span"><i>n</i></span> lines contain three letters each, forming the substring of dad's password. Each character in the input is a lowercase or uppercase Latin letter or a digit.</p></div><div class="output-specification"><div class="section-title">Output</div><p>If Tanya made a mistake somewhere during the game and the strings that correspond to the given set of substrings don't exist, print "<span class="tex-font-style-tt">NO</span>". </p><p>If it is possible to restore the string that corresponds to given set of substrings, print "<span class="tex-font-style-tt">YES</span>", and then print any suitable password option.</p></div><div class="sample-tests"><div class="section-title">Sample test(s)</div><div class="sample-test"><div class="input"><div class="title">Input</div><pre>5<br>aca<br>aba<br>aba<br>cab<br>bac<br></pre></div><div class="output"><div class="title">Output</div><pre>YES<br>abacaba<br></pre></div><div class="input"><div class="title">Input</div><pre>4<br>abc<br>bCb<br>cb1<br>b13<br></pre></div><div class="output"><div class="title">Output</div><pre>NO<br></pre></div><div class="input"><div class="title">Input</div><pre>7<br>aaa<br>aaa<br>aaa<br>aaa<br>aaa<br>aaa<br>aaa<br></pre></div><div class="output"><div class="title">Output</div><pre>YES<br>aaaaaaaaa<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
<!-- /Frame: ProblemViewFrame.ftl -->        </div>
        <div style="margin-bottom: 2em;">
<!-- Frame: ProblemViewFrame.ftl -->
<div class="problemindexholder" problemindex="E">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Arthur and Brackets</div><div class="time-limit"><div class="property-title">time limit per test</div>2 seconds</div><div class="memory-limit"><div class="property-title">memory limit per test</div>128 megabytes</div><div class="input-file"><div class="property-title">input</div>standard input</div><div class="output-file"><div class="property-title">output</div>standard output</div></div><div><p><span class="tex-font-style-it">Notice that the memory limit is non-standard.</span></p><p>Recently Arthur and Sasha have studied correct bracket sequences. Arthur understood this topic perfectly and become so amazed about correct bracket sequences, so he even got himself a favorite correct bracket sequence of length <span class="tex-span">2<i>n</i></span>. Unlike Arthur, Sasha understood the topic very badly, and broke Arthur's favorite correct bracket sequence just to spite him.</p><p>All Arthur remembers about his favorite sequence is for each opening parenthesis ('<span class="tex-font-style-tt">(</span>') the approximate distance to the corresponding closing one ('<span class="tex-font-style-tt">)</span>'). For the <span class="tex-span"><i>i</i></span>-th opening bracket he remembers the segment <span class="tex-span">[<i>l</i><sub class="lower-index"><i>i</i></sub>, <i>r</i><sub class="lower-index"><i>i</i></sub>]</span>, containing the distance to the corresponding closing bracket.</p><p>Formally speaking, for the <span class="tex-span"><i>i</i></span>-th opening bracket (in order from left to right) we know that the difference of its position and the position of the corresponding closing bracket belongs to the segment <span class="tex-span">[<i>l</i><sub class="lower-index"><i>i</i></sub>, <i>r</i><sub class="lower-index"><i>i</i></sub>]</span>.</p><p>Help Arthur restore his favorite correct bracket sequence!</p></div><div class="input-specification"><div class="section-title">Input</div><p>The first line contains integer <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 600</span>), the number of opening brackets in Arthur's favorite correct bracket sequence. </p><p>Next <span class="tex-span"><i>n</i></span> lines contain numbers <span class="tex-span"><i>l</i><sub class="lower-index"><i>i</i></sub></span> and <span class="tex-span"><i>r</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>l</i><sub class="lower-index"><i>i</i></sub> ≤ <i>r</i><sub class="lower-index"><i>i</i></sub> &lt; 2<i>n</i></span>), representing the segment where lies the distance from the <span class="tex-span"><i>i</i></span>-th opening bracket and the corresponding closing one. </p><p>The descriptions of the segments are given in the order in which the opening brackets occur in Arthur's favorite sequence if we list them from left to right.</p></div><div class="output-specification"><div class="section-title">Output</div><p>If it is possible to restore the correct bracket sequence by the given data, print any possible choice.</p><p>If Arthur got something wrong, and there are no sequences corresponding to the given information, print a single line "<span class="tex-font-style-tt">IMPOSSIBLE</span>" (without the quotes).</p></div><div class="sample-tests"><div class="section-title">Sample test(s)</div><div class="sample-test"><div class="input"><div class="title">Input</div><pre>4<br>1 1<br>1 1<br>1 1<br>1 1<br></pre></div><div class="output"><div class="title">Output</div><pre>()()()()<br></pre></div><div class="input"><div class="title">Input</div><pre>3<br>5 5<br>3 3<br>1 1<br></pre></div><div class="output"><div class="title">Output</div><pre>((()))<br></pre></div><div class="input"><div class="title">Input</div><pre>3<br>5 5<br>3 3<br>2 2<br></pre></div><div class="output"><div class="title">Output</div><pre>IMPOSSIBLE<br></pre></div><div class="input"><div class="title">Input</div><pre>3<br>2 3<br>1 4<br>1 4<br></pre></div><div class="output"><div class="title">Output</div><pre>(())()<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
<!-- /Frame: ProblemViewFrame.ftl -->        </div>

    <br style="clear:both;">

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2014 Mike Mirzayanov</div>
        <div>The only programming contests Web 2.0 platform</div>

    </div>
</div>
</div>


<!-- /Page: CompleteProblemsViewPage.ftl --><div id="datepick-div" style="display: none;"></div><div id="cboxOverlay" style="display: none;"></div><div id="colorbox" class="" style="display: none; padding-bottom: 42px; padding-right: 42px;"><div id="cboxWrapper"><div><div id="cboxTopLeft" style="float: left;"></div><div id="cboxTopCenter" style="float: left;"></div><div id="cboxTopRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxMiddleLeft" style="float: left;"></div><div id="cboxContent" style="float: left;"><div id="cboxLoadedContent" style="width: 0px; height: 0px; overflow: hidden; float: left;"></div><div id="cboxLoadingOverlay" style="float: left;"></div><div id="cboxLoadingGraphic" style="float: left;"></div><div id="cboxTitle" style="float: left;"></div><div id="cboxCurrent" style="float: left;"></div><div id="cboxNext" style="float: left;"></div><div id="cboxPrevious" style="float: left;"></div><div id="cboxSlideshow" style="float: left;"></div><div id="cboxClose" style="float: left;"></div></div><div id="cboxMiddleRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxBottomLeft" style="float: left;"></div><div id="cboxBottomCenter" style="float: left;"></div><div id="cboxBottomRight" style="float: left;"></div></div></div><div style="position: absolute; width: 9999px; visibility: hidden; display: none;"></div></div></body></html>