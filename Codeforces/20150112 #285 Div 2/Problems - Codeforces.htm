<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<!-- saved from url=(0042)http://codeforces.com/contest/501/problems -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta name="X-Csrf-Token" content="c471660983ad9c17016d7aeb5094d8ce">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta http-equiv="profileName" content="c4">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90">
    <meta property="fb:admins" content="100001352546622">
    <meta property="og:image" content="/static/images/codeforces-telegram-square.png">
    <meta property="og:title" content="Problems - Codeforces">
    <meta property="og:site_name" content="Codeforces">
    
    <meta name="cc" content="1twi57w1kr3st">
    <meta name="pc" content="1xxj9rg6v7gd3">
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2">
    <title>Problems - Codeforces</title>
        <meta name="description" content="Codeforces. Programming competitions and contests, programming community">
        <meta name="keywords" content="programming algorithm contest competition informatics olympiads c++ java graphs vkcup">
    <meta name="robots" content="index, follow">

    <link rel="stylesheet" href="./Problems - Codeforces_files/font-awesome.min.css" type="text/css" charset="utf-8">

        <link href="./Problems - Codeforces_files/css" rel="stylesheet" type="text/css">


    <link rel="shortcut icon" type="image/png" href="http://codeforces.com/static/favicon.png">

    <!--CombineResourcesFilter-->
    <link rel="stylesheet" href="./Problems - Codeforces_files/prettify.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/clear.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/style.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/ttypography.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/problem-statement.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/second-level-menu.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/roundbox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/datatable.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/table-form.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/topic.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/jquery.jgrowl.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/facebox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/jquery.wysiwyg.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/jquery.autocomplete.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/codeforces.datepick.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/colorbox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/jquery.drafts.css" type="text/css" charset="utf-8">
        <link rel="stylesheet" href="./Problems - Codeforces_files/sidebar-menu.css" type="text/css" charset="utf-8">
        <link rel="stylesheet" href="./Problems - Codeforces_files/community.css" type="text/css" charset="utf-8">

    <script type="text/javascript" async="" src="./Problems - Codeforces_files/ga.js"></script><script type="text/javascript" src="./Problems - Codeforces_files/prettify.js"></script><style type="text/css"></style>
    <script type="text/javascript" src="./Problems - Codeforces_files/jquery-1.8.3.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/sockjs-0.2.1.min.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/vertxbus-1.2.min.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/jquery.easing.min.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/jquery.lavalamp.min.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/jquery.jgrowl.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/facebox.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/jquery.wysiwyg.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/wysiwyg.colorpicker.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/wysiwyg.table.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/wysiwyg.image.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/wysiwyg.link.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/jquery.autocomplete.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/jquery.datepick.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/jquery.ie6blocker.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/jquery.colorbox-min.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/jquery.ba-bbq.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/jquery.drafts.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/codeforces.js"></script>
    <!--/CombineResourcesFilter-->

    <link rel="stylesheet" href="./Problems - Codeforces_files/style(1).css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="./Problems - Codeforces_files/style(2).css" type="text/css" charset="utf-8">

    <script type="text/javascript" src="./Problems - Codeforces_files/share.js" charset="utf-8"></script>
    
    <script type="text/javascript" src="./Problems - Codeforces_files/jquery.markitup.js"></script>
    <script type="text/javascript" src="./Problems - Codeforces_files/set.js"></script>

    <!--[if IE]>
    <style>
        #sidebar {
            padding-left: 1em;
            margin: 1em 1em 1em 0;
        }
    </style>
    <![endif]-->


</head>
<body><span style="display:none;" class="csrf-token" data-csrf="c471660983ad9c17016d7aeb5094d8ce">&nbsp;</span>
<div class="button-up" style="display: none; opacity: 0.7; width: 50px; height:100%; position: fixed; left: 0; top: 0; cursor: pointer; text-align: center; line-height: 35px; color: #d3dbe4; font-weight: bold; font-size: 30px;"><i class="icon-circle-arrow-up"></i></div>

<!-- Codeforces JavaScripts. -->
<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.getCodeforcesServerTime = function(callback) {
        $.post("/data/time", {}, callback, "json");
    }

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();

        var count = 0;

        function getDelay() {
            var delay = 0;
            var last = Codeforces.getCookie("lastOnlineTimeUpdaterInvocation");
            if (last && last != null) {
                var period = count < 20 ? 180 * 1000 : 360 * 1000;
                delay = period - (new Date().getTime() - last);
                if (delay < 0)
                    delay = 0;
            }
            return delay;
        }

        window.setInterval(function() {
            if (getDelay() <= 0 && count < 120) {
                count++;
                Codeforces.ping("/data/update-online");
            }
        }, 5000);

        var handle = "Royalmiki";
        $("a.rated-user:contains(" + handle + "), span.participant:contains(" + handle + ")").each(function() {
            if ($(this).text() == handle) {
                var td = $(this).parent();
                var tr = $(this).parent().parent();
                if (td.is("td") && tr.is("tr")) {
                    tr.addClass("highlighted-row");
                }
            }
        });

        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function () {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = (document.location.protocol == 'https:' ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="http://codeforces.com/"><img src="./Problems - Codeforces_files/codeforces-logo-with-telegram.png"></a>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="http://codeforces.com/contest/501/problems?locale=en"><img src="./Problems - Codeforces_files/gb.png" title="In English" alt="In English"></a>
                <a href="http://codeforces.com/contest/501/problems?locale=ru"><img src="./Problems - Codeforces_files/ru.png" title="По-русски" alt="По-русски"></a>
            </div>
        </div>
        <br style="clear: both;">
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;" class="caption">Codeforces Round #285 (Div. 2)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div style="margin-bottom: 4em;page-break-after: always;">
<!-- Frame: ProblemViewFrame.ftl -->
<div class="problemindexholder" problemindex="A">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Contest</div><div class="time-limit"><div class="property-title">time limit per test</div>1 second</div><div class="memory-limit"><div class="property-title">memory limit per test</div>256 megabytes</div><div class="input-file"><div class="property-title">input</div>standard input</div><div class="output-file"><div class="property-title">output</div>standard output</div></div><div><p>Misha and Vasya participated in a Codeforces contest. Unfortunately, each of them solved only one problem, though successfully submitted it at the first attempt. Misha solved the problem that costs <span class="tex-span"><i>a</i></span> points and Vasya solved the problem that costs <span class="tex-span"><i>b</i></span> points. Besides, Misha submitted the problem <span class="tex-span"><i>c</i></span> minutes after the contest started and Vasya submitted the problem <span class="tex-span"><i>d</i></span> minutes after the contest started. As you know, on Codeforces the cost of a problem reduces as a round continues. That is, if you submit a problem that costs <span class="tex-span"><i>p</i></span> points <span class="tex-span"><i>t</i></span> minutes after the contest started, you get <img align="middle" class="tex-formula" src="./Problems - Codeforces_files/e7bb7983e9c15baf66651c7643406c249354c8c1.png"> points. </p><p>Misha and Vasya are having an argument trying to find out who got more points. Help them to find out the truth.</p></div><div class="input-specification"><div class="section-title">Input</div><p>The first line contains four integers <span class="tex-span"><i>a</i></span>, <span class="tex-span"><i>b</i></span>, <span class="tex-span"><i>c</i></span>, <span class="tex-span"><i>d</i></span> (<span class="tex-span">250 ≤ <i>a</i>, <i>b</i> ≤ 3500</span>, <span class="tex-span">0 ≤ <i>c</i>, <i>d</i> ≤ 180</span>). </p><p>It is guaranteed that numbers <span class="tex-span"><i>a</i></span> and <span class="tex-span"><i>b</i></span> are divisible by <span class="tex-span">250</span> (just like on any real Codeforces round).</p></div><div class="output-specification"><div class="section-title">Output</div><p>Output on a single line: </p><p>"<span class="tex-font-style-tt">Misha</span>" (without the quotes), if Misha got more points than Vasya.</p><p>"<span class="tex-font-style-tt">Vasya</span>" (without the quotes), if Vasya got more points than Misha.</p><p>"<span class="tex-font-style-tt">Tie</span>" (without the quotes), if both of them got the same number of points.</p></div><div class="sample-tests"><div class="section-title">Sample test(s)</div><div class="sample-test"><div class="input"><div class="title">Input</div><pre>500 1000 20 30<br></pre></div><div class="output"><div class="title">Output</div><pre>Vasya<br></pre></div><div class="input"><div class="title">Input</div><pre>1000 1000 1 1<br></pre></div><div class="output"><div class="title">Output</div><pre>Tie<br></pre></div><div class="input"><div class="title">Input</div><pre>1500 1000 176 177<br></pre></div><div class="output"><div class="title">Output</div><pre>Misha<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
<!-- /Frame: ProblemViewFrame.ftl -->        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">
<!-- Frame: ProblemViewFrame.ftl -->
<div class="problemindexholder" problemindex="B">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Misha and Changing Handles</div><div class="time-limit"><div class="property-title">time limit per test</div>1 second</div><div class="memory-limit"><div class="property-title">memory limit per test</div>256 megabytes</div><div class="input-file"><div class="property-title">input</div>standard input</div><div class="output-file"><div class="property-title">output</div>standard output</div></div><div><p>Misha hacked the Codeforces site. Then he decided to let all the users change their handles. A user can now change his handle any number of times. But each new handle must not be equal to any handle that is already used or that was used at some point.</p><p>Misha has a list of handle change requests. After completing the requests he wants to understand the relation between the original and the new handles of the users. Help him to do that.</p></div><div class="input-specification"><div class="section-title">Input</div><p>The first line contains integer <span class="tex-span"><i>q</i></span> (<span class="tex-span">1 ≤ <i>q</i> ≤ 1000</span>), the number of handle change requests.</p><p>Next <span class="tex-span"><i>q</i></span> lines contain the descriptions of the requests, one per line.</p><p>Each query consists of two non-empty strings <span class="tex-span"><i>old</i></span> and <span class="tex-span"><i>new</i></span>, separated by a space. The strings consist of lowercase and uppercase Latin letters and digits. Strings <span class="tex-span"><i>old</i></span> and <span class="tex-span"><i>new</i></span> are distinct. The lengths of the strings do not exceed <span class="tex-span">20</span>.</p><p>The requests are given chronologically. In other words, by the moment of a query there is a single person with handle <span class="tex-span"><i>old</i></span>, and handle <span class="tex-span"><i>new</i></span> is not used and has not been used by anyone.</p></div><div class="output-specification"><div class="section-title">Output</div><p>In the first line output the integer <span class="tex-span"><i>n</i></span> — the number of users that changed their handles at least once.</p><p>In the next <span class="tex-span"><i>n</i></span> lines print the mapping between the old and the new handles of the users. Each of them must contain two strings, <span class="tex-span"><i>old</i></span> and <span class="tex-span"><i>new</i></span>, separated by a space, meaning that before the user had handle <span class="tex-span"><i>old</i></span>, and after all the requests are completed, his handle is <span class="tex-span"><i>new</i></span>. You may output lines in any order.</p><p>Each user who changes the handle must occur exactly once in this description.</p></div><div class="sample-tests"><div class="section-title">Sample test(s)</div><div class="sample-test"><div class="input"><div class="title">Input</div><pre>5<br>Misha ILoveCodeforces<br>Vasya Petrov<br>Petrov VasyaPetrov123<br>ILoveCodeforces MikeMirzayanov<br>Petya Ivanov<br></pre></div><div class="output"><div class="title">Output</div><pre>3<br>Petya Ivanov<br>Misha MikeMirzayanov<br>Vasya VasyaPetrov123<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
<!-- /Frame: ProblemViewFrame.ftl -->        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">
<!-- Frame: ProblemViewFrame.ftl -->
<div class="problemindexholder" problemindex="C">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Misha and Forest</div><div class="time-limit"><div class="property-title">time limit per test</div>1 second</div><div class="memory-limit"><div class="property-title">memory limit per test</div>256 megabytes</div><div class="input-file"><div class="property-title">input</div>standard input</div><div class="output-file"><div class="property-title">output</div>standard output</div></div><div><p>Let's define a forest as a non-directed acyclic graph (also without loops and parallel edges). One day Misha played with the forest consisting of <span class="tex-span"><i>n</i></span> vertices. For each vertex <span class="tex-span"><i>v</i></span> from <span class="tex-span">0</span> to <span class="tex-span"><i>n</i> - 1</span> he wrote down two integers, <span class="tex-span"><i>degree</i><sub class="lower-index"><i>v</i></sub></span> and <span class="tex-span"><i>s</i><sub class="lower-index"><i>v</i></sub></span>, were the first integer is the number of vertices adjacent to vertex <span class="tex-span"><i>v</i></span>, and the second integer is the XOR sum of the numbers of vertices adjacent to <span class="tex-span"><i>v</i></span> (if there were no adjacent vertices, he wrote down <span class="tex-span">0</span>). </p><p>Next day Misha couldn't remember what graph he initially had. Misha has values <span class="tex-span"><i>degree</i><sub class="lower-index"><i>v</i></sub></span> and <span class="tex-span"><i>s</i><sub class="lower-index"><i>v</i></sub></span> left, though. Help him find the number of edges and the edges of the initial graph. It is guaranteed that there exists a forest that corresponds to the numbers written by Misha.</p></div><div class="input-specification"><div class="section-title">Input</div><p>The first line contains integer <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 2<sup class="upper-index">16</sup></span>), the number of vertices in the graph.</p><p>The <span class="tex-span"><i>i</i></span>-th of the next lines contains numbers <span class="tex-span"><i>degree</i><sub class="lower-index"><i>i</i></sub></span> and <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">0 ≤ <i>degree</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i> - 1</span>, <span class="tex-span">0 ≤ <i>s</i><sub class="lower-index"><i>i</i></sub> &lt; 2<sup class="upper-index">16</sup></span>), separated by a space.</p></div><div class="output-specification"><div class="section-title">Output</div><p>In the first line print number <span class="tex-span"><i>m</i></span>, the number of edges of the graph.</p><p>Next print <span class="tex-span"><i>m</i></span> lines, each containing two distinct numbers, <span class="tex-span"><i>a</i></span> and <span class="tex-span"><i>b</i></span> (<span class="tex-span">0 ≤ <i>a</i> ≤ <i>n</i> - 1</span>, <span class="tex-span">0 ≤ <i>b</i> ≤ <i>n</i> - 1</span>), corresponding to edge <span class="tex-span">(<i>a</i>, <i>b</i>)</span>.</p><p>Edges can be printed in any order; vertices of the edge can also be printed in any order.</p></div><div class="sample-tests"><div class="section-title">Sample test(s)</div><div class="sample-test"><div class="input"><div class="title">Input</div><pre>3<br>2 3<br>1 0<br>1 0<br></pre></div><div class="output"><div class="title">Output</div><pre>2<br>1 0<br>2 0<br></pre></div><div class="input"><div class="title">Input</div><pre>2<br>1 1<br>1 0<br></pre></div><div class="output"><div class="title">Output</div><pre>1<br>0 1<br></pre></div></div></div><div class="note"><div class="section-title">Note</div><p>The XOR sum of numbers is the result of bitwise adding numbers modulo <span class="tex-span">2</span>. This operation exists in many modern programming languages. For example, in languages C++, Java and Python it is represented as "<span class="tex-font-style-tt">^</span>", and in Pascal — as "xor".</p></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
<!-- /Frame: ProblemViewFrame.ftl -->        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">
<!-- Frame: ProblemViewFrame.ftl -->
<div class="problemindexholder" problemindex="D">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Misha and Permutations Summation</div><div class="time-limit"><div class="property-title">time limit per test</div>2 seconds</div><div class="memory-limit"><div class="property-title">memory limit per test</div>256 megabytes</div><div class="input-file"><div class="property-title">input</div>standard input</div><div class="output-file"><div class="property-title">output</div>standard output</div></div><div><p>Let's define the sum of two permutations <span class="tex-span"><i>p</i></span> and <span class="tex-span"><i>q</i></span> of numbers <span class="tex-span">0, 1, ..., (<i>n</i> - 1)</span> as permutation <img align="middle" class="tex-formula" src="./Problems - Codeforces_files/a6967136eb87d05a01f795f6061b884a1a9f4f4b.png">, where <span class="tex-span"><i>Perm</i>(<i>x</i>)</span> is the <span class="tex-span"><i>x</i></span>-th lexicographically permutation of numbers <span class="tex-span">0, 1, ..., (<i>n</i> - 1)</span> (counting from zero), and <span class="tex-span"><i>Ord</i>(<i>p</i>)</span> is the number of permutation <span class="tex-span"><i>p</i></span> in the lexicographical order.</p><p>For example, <span class="tex-span"><i>Perm</i>(0) = (0, 1, ..., <i>n</i> - 2, <i>n</i> - 1)</span>, <span class="tex-span"><i>Perm</i>(<i>n</i>! - 1) = (<i>n</i> - 1, <i>n</i> - 2, ..., 1, 0)</span></p><p>Misha has two permutations, <span class="tex-span"><i>p</i></span> and <span class="tex-span"><i>q</i></span>. Your task is to find their sum.</p><p>Permutation <span class="tex-span"><i>a</i> = (<i>a</i><sub class="lower-index">0</sub>, <i>a</i><sub class="lower-index">1</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i> - 1</sub>)</span> is called to be lexicographically smaller than permutation <span class="tex-span"><i>b</i> = (<i>b</i><sub class="lower-index">0</sub>, <i>b</i><sub class="lower-index">1</sub>, ..., <i>b</i><sub class="lower-index"><i>n</i> - 1</sub>)</span>, if for some <span class="tex-span"><i>k</i></span> following conditions hold: <span class="tex-span"><i>a</i><sub class="lower-index">0</sub> = <i>b</i><sub class="lower-index">0</sub>, <i>a</i><sub class="lower-index">1</sub> = <i>b</i><sub class="lower-index">1</sub>, ..., <i>a</i><sub class="lower-index"><i>k</i> - 1</sub> = <i>b</i><sub class="lower-index"><i>k</i> - 1</sub>, <i>a</i><sub class="lower-index"><i>k</i></sub> &lt; <i>b</i><sub class="lower-index"><i>k</i></sub></span>.</p></div><div class="input-specification"><div class="section-title">Input</div><p>The first line contains an integer <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 200 000</span>).</p><p>The second line contains <span class="tex-span"><i>n</i></span> distinct integers from <span class="tex-span">0</span> to <span class="tex-span"><i>n</i> - 1</span>, separated by a space, forming permutation <span class="tex-span"><i>p</i></span>.</p><p>The third line contains <span class="tex-span"><i>n</i></span> distinct integers from <span class="tex-span">0</span> to <span class="tex-span"><i>n</i> - 1</span>, separated by spaces, forming permutation <span class="tex-span"><i>q</i></span>.</p></div><div class="output-specification"><div class="section-title">Output</div><p>Print <span class="tex-span"><i>n</i></span> distinct integers from <span class="tex-span">0</span> to <span class="tex-span"><i>n</i> - 1</span>, forming the sum of the given permutations. Separate the numbers by spaces.</p></div><div class="sample-tests"><div class="section-title">Sample test(s)</div><div class="sample-test"><div class="input"><div class="title">Input</div><pre>2<br>0 1<br>0 1<br></pre></div><div class="output"><div class="title">Output</div><pre>0 1<br></pre></div><div class="input"><div class="title">Input</div><pre>2<br>0 1<br>1 0<br></pre></div><div class="output"><div class="title">Output</div><pre>1 0<br></pre></div><div class="input"><div class="title">Input</div><pre>3<br>1 2 0<br>2 1 0<br></pre></div><div class="output"><div class="title">Output</div><pre>1 0 2<br></pre></div></div></div><div class="note"><div class="section-title">Note</div><p>Permutations of numbers from 0 to 1 in the lexicographical order: <span class="tex-span">(0, 1), (1, 0)</span>.</p><p>In the first sample <span class="tex-span"><i>Ord</i>(<i>p</i>) = 0</span> and <span class="tex-span"><i>Ord</i>(<i>q</i>) = 0</span>, so the answer is <img align="middle" class="tex-formula" src="./Problems - Codeforces_files/8ce4cd76db7c3f712f9101b410c36891976581b8.png">.</p><p>In the second sample <span class="tex-span"><i>Ord</i>(<i>p</i>) = 0</span> and <span class="tex-span"><i>Ord</i>(<i>q</i>) = 1</span>, so the answer is <img align="middle" class="tex-formula" src="./Problems - Codeforces_files/5684e4e2deb5ed60419a5c9e765f0cd4cb995652.png">.</p><p>Permutations of numbers from 0 to 2 in the lexicographical order: <span class="tex-span">(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)</span>.</p><p>In the third sample <span class="tex-span"><i>Ord</i>(<i>p</i>) = 3</span> and <span class="tex-span"><i>Ord</i>(<i>q</i>) = 5</span>, so the answer is <img align="middle" class="tex-formula" src="./Problems - Codeforces_files/da14f774ebda9f417649f5334d329ec7b7c07778.png">.</p></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
<!-- /Frame: ProblemViewFrame.ftl -->        </div>
        <div style="margin-bottom: 2em;">
<!-- Frame: ProblemViewFrame.ftl -->
<div class="problemindexholder" problemindex="E">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Misha and Palindrome Degree</div><div class="time-limit"><div class="property-title">time limit per test</div>1 second</div><div class="memory-limit"><div class="property-title">memory limit per test</div>256 megabytes</div><div class="input-file"><div class="property-title">input</div>standard input</div><div class="output-file"><div class="property-title">output</div>standard output</div></div><div><p>Misha has an array of <span class="tex-span"><i>n</i></span> integers indexed by integers from <span class="tex-span">1</span> to <span class="tex-span"><i>n</i></span>. Let's define <span class="tex-font-style-it">palindrome degree</span> of array <span class="tex-span"><i>a</i></span> as the number of such index pairs <span class="tex-span">(<i>l</i>, <i>r</i>)(1 ≤ <i>l</i> ≤ <i>r</i> ≤ <i>n</i>)</span>, that the elements from the <span class="tex-span"><i>l</i></span>-th to the <span class="tex-span"><i>r</i></span>-th one inclusive can be rearranged in such a way that the <span class="tex-font-style-bf">whole</span> array will be a palindrome. In other words, pair <span class="tex-span">(<i>l</i>, <i>r</i>)</span> should meet the condition that after some rearranging of numbers on positions from <span class="tex-span"><i>l</i></span> to <span class="tex-span"><i>r</i></span>, inclusive (it is allowed not to rearrange the numbers at all), for any <span class="tex-span">1 ≤ <i>i</i> ≤ <i>n</i></span> following condition holds: <span class="tex-span"><i>a</i>[<i>i</i>] = <i>a</i>[<i>n</i> - <i>i</i> + 1]</span>. </p><p>Your task is to find the <span class="tex-font-style-it">palindrome degree</span> of Misha's array.</p></div><div class="input-specification"><div class="section-title">Input</div><p>The first line contains integer <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>).</p><p>The second line contains <span class="tex-span"><i>n</i></span> positive integers <span class="tex-span"><i>a</i>[<i>i</i>]</span> (<span class="tex-span">1 ≤ <i>a</i>[<i>i</i>] ≤ <i>n</i></span>), separated by spaces — the elements of Misha's array.</p></div><div class="output-specification"><div class="section-title">Output</div><p>In a single line print the answer to the problem.</p></div><div class="sample-tests"><div class="section-title">Sample test(s)</div><div class="sample-test"><div class="input"><div class="title">Input</div><pre>3<br>2 2 2<br></pre></div><div class="output"><div class="title">Output</div><pre>6<br></pre></div><div class="input"><div class="title">Input</div><pre>6<br>3 6 5 3 3 5<br></pre></div><div class="output"><div class="title">Output</div><pre>0<br></pre></div><div class="input"><div class="title">Input</div><pre>5<br>5 5 2 5 2<br></pre></div><div class="output"><div class="title">Output</div><pre>4<br></pre></div></div></div><div class="note"><div class="section-title">Note</div><p>In the first sample test any possible pair <span class="tex-span">(<i>l</i>, <i>r</i>)</span> meets the condition.</p><p>In the third sample test following pairs <span class="tex-span">(1, 3), (1, 4), (1, 5), (2, 5)</span> meet the condition.</p></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
<!-- /Frame: ProblemViewFrame.ftl -->        </div>

    <br style="clear:both;">

    <div id="footer">
        <div><a href="http://codeforces.com/">Codeforces</a> (c) Copyright 2010-2014 Mike Mirzayanov</div>
        <div>The only programming contests Web 2.0 platform</div>

    </div>
</div>
</div>


<!-- /Page: CompleteProblemsViewPage.ftl --><div id="datepick-div" style="display: none;"></div><div id="cboxOverlay" style="display: none;"></div><div id="colorbox" class="" style="display: none; padding-bottom: 42px; padding-right: 42px;"><div id="cboxWrapper"><div><div id="cboxTopLeft" style="float: left;"></div><div id="cboxTopCenter" style="float: left;"></div><div id="cboxTopRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxMiddleLeft" style="float: left;"></div><div id="cboxContent" style="float: left;"><div id="cboxLoadedContent" style="width: 0px; height: 0px; overflow: hidden; float: left;"></div><div id="cboxLoadingOverlay" style="float: left;"></div><div id="cboxLoadingGraphic" style="float: left;"></div><div id="cboxTitle" style="float: left;"></div><div id="cboxCurrent" style="float: left;"></div><div id="cboxNext" style="float: left;"></div><div id="cboxPrevious" style="float: left;"></div><div id="cboxSlideshow" style="float: left;"></div><div id="cboxClose" style="float: left;"></div></div><div id="cboxMiddleRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxBottomLeft" style="float: left;"></div><div id="cboxBottomCenter" style="float: left;"></div><div id="cboxBottomRight" style="float: left;"></div></div></div><div style="position: absolute; width: 9999px; visibility: hidden; display: none;"></div></div></body></html>